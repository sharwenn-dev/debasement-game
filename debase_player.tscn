[gd_scene load_steps=12 format=3 uid="uid://cponqcw7k51d0"]

[ext_resource type="FontFile" uid="uid://cggb81otl6rku" path="res://menus/redaction-70-latin-400-normal.ttf" id="1_6jvax"]
[ext_resource type="PackedScene" uid="uid://buei2p7n260rx" path="res://menus/pause_menu.tscn" id="2_s4sly"]
[ext_resource type="PackedScene" uid="uid://dglhfw4xxijef" path="res://menus/death_menu.tscn" id="3_0ijgc"]

[sub_resource type="GDScript" id="GDScript_5h67k"]
script/source = "extends CharacterBody3D

var SPEED = 4.0
var JUMP_VELOCITY = 5.0
var fall_dmg_mult = 1.5
var fall_dmg_thresh = 10.0

const CAM_SENS = 0.03
@onready var camera = $head/Camera3D

@onready var BASE_FOV = camera.fov
var FOV_CHANGE = 0.5

const BOB_FREQ = 2.4
const BOB_AMP = 0.08
var t_bob = 0.0
var prev_bob_y = 0.0
var footstep_ready = true

var inertia = Vector3.ZERO
var damage_lock = 0.0
var fastest_falling = 0.0

@onready var model = $MeshInstance3D
@onready var health_bar = $head/Camera3D/HUD/health_bar
@onready var hunger_bar = $head/Camera3D/HUD/hunger_bar
@onready var dialogue_box = $head/Camera3D/HUD/dialogue
@onready var value_box = $head/Camera3D/HUD/value
@onready var interact_ray = $head/Camera3D/interact_ray
@onready var floor_ray = $floor_ray
@onready var left_node = $head/Camera3D/Left
@onready var right_node = $head/Camera3D/Right
@onready var hitbox_pos = $head/Camera3D/hitbox_pos
@onready var death_menu = $head/Camera3D/death_menu
@onready var aud1 = $aud_player1
@onready var aud2 = $aud_player2
@onready var aud3 = $aud_player3

@onready var hit = interact_ray.get_collider()
@onready var floor_hit = floor_ray.get_collider()

#@onready var eat = preload(\"res://assets/sound/sfx/eat.wav\")
@onready var pickup = preload(\"res://assets/sound/sfx/pickup_item.wav\")
@onready var drop = preload(\"res://assets/sound/sfx/drop_item.wav\")
@onready var damage = preload(\"res://assets/sound/sfx/take_damage.wav\")
@onready var value = preload(\"res://assets/sound/sfx/value_gained.wav\")
@onready var starve = preload(\"res://assets/sound/sfx/starving.wav\")
@onready var dialogue1 = preload(\"res://assets/sound/sfx/dialogue1.wav\")
@onready var dialogue2 = preload(\"res://assets/sound/sfx/dialogue2.wav\")
@onready var dialogue3 = preload(\"res://assets/sound/sfx/dialogue3.wav\")
@onready var dialogue4 = preload(\"res://assets/sound/sfx/dialogue4.wav\")
@onready var footstep = preload(\"res://assets/sound/sfx/footstep.wav\")

var hunger_down_time = 5.0
var time_since_hunger = 0.0
var hunger_down_amount = 5
var starve_time = 5.0
var starve_timer = 0.0
var has_played_starve_sound = false

var can_interact = false
var can_pickup = false
var can_talk = true

var current_dialogue_set = null
var current_dialogue_step = null
var dialogue_character = null
var in_dialogue = false
var dialogue_cooldown = false

@onready var dialogue_sounds = [
	dialogue1, dialogue2, dialogue3, dialogue4
]

@export var data = {
	\"STATE\": \"alive\",
	\"can_get_value\": true,
	\"max_health\": 50,
	\"health\": 50,
	\"max_hunger\": 100,
	\"hunger\": 20,
	\"left\": null,
	\"right\": null,
	\"values\": [],
	\"value\": {
		\"killing\": 0,
		\"starving\": 0,
		\"falling\": 0,
	},
}

func player_setup():
	hunger_bar.max_value = data.max_hunger
	hunger_bar.value = data.hunger
	health_bar.max_value = data.max_health
	health_bar.value = data.health
	$head/Camera3D/HUD/interact_test.visible = can_interact 
	$head/Camera3D/HUD/pickup_test.visible = can_pickup
	if hit and can_interact:
		$head/Camera3D/HUD/interact_test.text = hit.interact_type
	if hit and can_pickup:
		$head/Camera3D/HUD/pickup_test.text = hit.item_name
	if can_pickup or can_interact:
		$head/Camera3D/HUD/crosshair.visible = false
	else:
		$head/Camera3D/HUD/crosshair.visible = true
	if len(left_node.get_children()) > 0:
		data.left = left_node.get_child(0)
	else:
		data.left = null
	if len(right_node.get_children()) > 0:
		data.right = right_node.get_child(0)
	else:
		data.right = null

func _ready() -> void:
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	model.visible = false
	player_setup()
	ValueHandle.value_reset()

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion and \\
	Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
		self.rotate_y(-event.relative.x * (CAM_SENS / 10.0))
		camera.rotate_x(-event.relative.y * (CAM_SENS / 10.0))
		camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-90), deg_to_rad(90))

func headbob(time):
	var pos = Vector3.ZERO
	pos.x = cos(time * BOB_FREQ/2) * BOB_AMP
	pos.y = sin(time * BOB_FREQ) * BOB_AMP
	return pos

func take_damage(dmg, type):
	if damage_lock == 0.0 and type != \"fall\":
		damage_lock = 0.5
		data.health -= dmg
		play_sound(damage, aud1)
	elif type == \"fall\":
		data.health -= dmg
		data.value.falling += dmg
		play_sound(damage, aud1)
	pass

func kill_check():
	if data.health <= 0:
		await get_tree().create_timer(0.25).timeout
		$head/Camera3D/HUD.hide()
		death_menu.activate_death()
		if Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
		data.STATE = \"dead\"
		get_tree().paused = true

func do_dialogue(text_set, page, character):
	current_dialogue_set = text_set
	current_dialogue_step = page
	dialogue_character = character
	var rand = randi_range(0, len(dialogue_sounds)-1)
	play_sound(dialogue_sounds[rand], aud1)
	if text_set[page] == \"NO DIALOGUE\":
		current_dialogue_set = null
		current_dialogue_step = 0
		if not dialogue_character.infinite_range:
			dialogue_character.dialogue_range.monitoring = false
			dialogue_character.in_dialogue_range = false
		dialogue_character = null
		dialogue_box.visible = false
		dialogue_cooldown = true
		var timer = get_tree().create_timer(0.5)
		await timer.timeout
		dialogue_cooldown = false
		in_dialogue = false
		return
	in_dialogue = true
	dialogue_box.text = text_set[page]
	dialogue_box.visible = true

func end_dialogue():
	current_dialogue_set = null
	current_dialogue_step = 0
	dialogue_box.visible = false
	dialogue_cooldown = true
	var timer = get_tree().create_timer(0.5)
	await timer.timeout
	dialogue_cooldown = false
	in_dialogue = false
	return

func get_item(item, side):
	item.use_collision = false # probably change for type later
	item.get_parent().remove_child(item)
	side.add_child(item) #REMOVE PARENT, CHANGE PARENT
	item.global_position = side.global_position
	play_sound(pickup, aud1)

func drop_item(item):
	var point = floor_ray.get_collision_point()
	if item != null:
		item.get_parent().remove_child(item)
		get_tree().get_root().add_child(item)
		item.use_collision = true
		item.global_position = point
		item.global_position.y += 0.05
		play_sound(drop, aud1)

func play_sound(sound, aud_player):
	aud_player.stream = sound
	aud_player.play()

func _physics_process(delta: float) -> void:
	if in_dialogue:
		if Input.is_action_just_pressed(\"interact\") and not dialogue_cooldown:
			current_dialogue_step += 1
			do_dialogue(current_dialogue_set, current_dialogue_step, dialogue_character)
	
	if Input.is_action_just_pressed(\"drop_left\") and data.left != null \\
	and is_on_floor():
		drop_item(data.left)
	if Input.is_action_just_pressed(\"drop_right\") and data.right != null \\
	and is_on_floor():
		drop_item(data.right)
	
	if Input.is_action_just_pressed(\"left_click\") and data.left != null:
		data.left.activate() 
	elif Input.is_action_just_pressed(\"right_click\") and data.right != null:
		data.right.activate()
	
	hit = interact_ray.get_collider()
	if hit and hit.is_in_group(\"Interactable\") and not in_dialogue:
		can_interact = true
		if Input.is_action_just_pressed(\"interact\") and can_interact:
			hit.interact()
	elif hit and hit.is_in_group(\"Item\") and not in_dialogue:
		can_pickup = true
		if Input.is_action_just_pressed(\"left_click\") and data.left == null:
			get_item(hit, left_node)
		elif Input.is_action_just_pressed(\"right_click\") and data.right == null:
			get_item(hit, right_node)
	else:
		hit = null
		can_interact = false
		can_pickup = false
	
	if data.health <= 0:
		pass
	
	time_since_hunger += delta
	if time_since_hunger >= hunger_down_time:
		data.hunger = clamp(data.hunger - 5, 0, data.max_hunger)
		time_since_hunger = 0.0
	
	if data.hunger <= 0:
		starve_timer += delta
		if starve_timer >= starve_time:
			data.health -= 10
			play_sound(damage, aud1)
			starve_timer = 0.0
	
	if data.hunger <= 0:
		if not has_played_starve_sound:
			play_sound(starve, aud1)
			has_played_starve_sound = true
	else:
		has_played_starve_sound = false

	
	$head/Camera3D/HUD.visible = not get_tree().paused
	if Input.is_action_just_pressed(\"ui_cancel\"):
		if Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
			$head/Camera3D/HUD.hide()
			$head/Camera3D/pause_menu.show()
			get_tree().paused = true
		else:
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
	if Input.is_action_just_pressed(\"reset_test\"):
		get_tree().call_deferred(\"reload_current_scene\")
	
	if not is_on_floor():
		velocity += get_gravity() * delta * 2
		fastest_falling = abs(velocity.y)
	if is_on_floor():
		if fastest_falling >= fall_dmg_thresh:
			take_damage(fastest_falling*fall_dmg_mult, \"fall\")
			fastest_falling = 0.0
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		
	var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	elif not direction:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
		if is_on_floor():
			pass
	
	t_bob += delta * velocity.length() * float(is_on_floor())
	
	var bob_pos = headbob(t_bob)
	camera.transform.origin = bob_pos
	if is_on_floor():
		if bob_pos.y < prev_bob_y and footstep_ready:
			aud2.pitch_scale = randf_range(0.85, 1.15)
			aud2.volume_db = -8.0  # Quieter volume
			play_sound(footstep, aud2)
			footstep_ready = false
		elif bob_pos.y > prev_bob_y:
			footstep_ready = true
		prev_bob_y = bob_pos.y
	
	var velocity_clamped = clamp(velocity.length(), 0.5, SPEED*2.0)
	var target_fov = BASE_FOV + FOV_CHANGE * velocity_clamped
	camera.fov = lerp(camera.fov, target_fov, delta * 8.0)
	
	velocity += inertia
	inertia = inertia.move_toward(Vector3.ZERO, delta*1000.0)
	
	damage_lock = max(damage_lock-delta, 0.0)
	player_setup()
	kill_check()
	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_juic7"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_py7ks"]
radius = 0.517652
height = 2.07274

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ur2xb"]
bg_color = Color(0, 0, 0, 1)
corner_detail = 20

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_6jvax"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_s4sly"]
bg_color = Color(1, 1, 1, 1)
border_width_left = 15
border_width_top = 15
border_width_right = 15
border_width_bottom = 15
border_color = Color(0, 0, 0, 1)
border_blend = true

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_0ijgc"]
draw_center = false
border_width_left = 20
border_width_top = 20
border_width_right = 20
border_width_bottom = 20
border_color = Color(0, 0, 0, 1)
border_blend = true
shadow_color = Color(0.485703, 0.485704, 0.485703, 0.6)
shadow_size = 50

[sub_resource type="LabelSettings" id="LabelSettings_6jvax"]
font_size = 50
font_color = Color(0.964742, 0.964742, 0.964742, 1)
shadow_size = 5
shadow_color = Color(0.0253638, 0.0253638, 0.0253638, 1)

[node name="debase_player" type="CharacterBody3D" groups=["Human", "Player"]]
wall_min_slide_angle = 3.14159
script = SubResource("GDScript_5h67k")

[node name="aud_player1" type="AudioStreamPlayer" parent="."]
max_polyphony = 10

[node name="aud_player2" type="AudioStreamPlayer" parent="."]

[node name="aud_player3" type="AudioStreamPlayer" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.261884, 0)
mesh = SubResource("CapsuleMesh_juic7")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00091821, 0.290228, 0)
shape = SubResource("CapsuleShape3D_py7ks")

[node name="head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0340518, 0.764707, 0)

[node name="Camera3D" type="Camera3D" parent="head"]
current = true
fov = 90.0

[node name="pause_menu" parent="head/Camera3D" instance=ExtResource("2_s4sly")]
visible = false

[node name="death_menu" parent="head/Camera3D" instance=ExtResource("3_0ijgc")]
visible = false

[node name="HUD" type="CanvasLayer" parent="head/Camera3D"]

[node name="hunger_bar" type="ProgressBar" parent="head/Camera3D/HUD"]
self_modulate = Color(0.969497, 0.548401, 0, 1)
clip_children = 2
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 23.0
offset_top = -135.0
offset_right = 44.0
grow_vertical = 0
theme_override_styles/background = SubResource("StyleBoxFlat_ur2xb")
theme_override_styles/fill = SubResource("StyleBoxFlat_6jvax")
value = 50.0
fill_mode = 3
show_percentage = false

[node name="health_bar" type="ProgressBar" parent="head/Camera3D/HUD"]
self_modulate = Color(0.968627, 0.152941, 0, 1)
clip_children = 2
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_top = -135.0
offset_right = 21.0
grow_vertical = 0
theme_override_styles/background = SubResource("StyleBoxFlat_ur2xb")
theme_override_styles/fill = SubResource("StyleBoxFlat_6jvax")
value = 50.0
fill_mode = 3
show_percentage = false

[node name="interact_test" type="Label" parent="head/Camera3D/HUD"]
visible = false
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -30.5
offset_top = -11.5
offset_right = 30.5
offset_bottom = 11.5
grow_horizontal = 2
grow_vertical = 2
theme_override_fonts/font = ExtResource("1_6jvax")
text = "interact"
horizontal_alignment = 1
vertical_alignment = 1

[node name="pickup_test" type="Label" parent="head/Camera3D/HUD"]
visible = false
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -30.5
offset_top = -11.5
offset_right = 30.5
offset_bottom = 11.5
grow_horizontal = 2
grow_vertical = 2
theme_override_fonts/font = ExtResource("1_6jvax")
text = "interact"
horizontal_alignment = 1
vertical_alignment = 1

[node name="dialogue" type="Label" parent="head/Camera3D/HUD"]
process_mode = 3
visible = false
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -246.0
grow_horizontal = 2
grow_vertical = 0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_fonts/font = ExtResource("1_6jvax")
theme_override_font_sizes/font_size = 45
theme_override_styles/normal = SubResource("StyleBoxFlat_s4sly")
text = "dialogue"
horizontal_alignment = 1
vertical_alignment = 1

[node name="value" type="Label" parent="head/Camera3D/HUD"]
visible = false
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -427.0
offset_top = 25.0
offset_right = 427.0
offset_bottom = 211.0
grow_horizontal = 2
theme_override_fonts/font = ExtResource("1_6jvax")
theme_override_font_sizes/font_size = 50
theme_override_styles/normal = SubResource("StyleBoxFlat_0ijgc")
text = "YOU VALUE NOTHING"
label_settings = SubResource("LabelSettings_6jvax")
horizontal_alignment = 1
vertical_alignment = 1

[node name="crosshair" type="Label" parent="head/Camera3D/HUD"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -70.0
offset_top = -50.0
offset_right = 70.0
offset_bottom = 19.0
grow_horizontal = 2
grow_vertical = 2
theme_override_fonts/font = ExtResource("1_6jvax")
theme_override_font_sizes/font_size = 50
text = "."
horizontal_alignment = 1
vertical_alignment = 1

[node name="interact_ray" type="RayCast3D" parent="head/Camera3D"]
target_position = Vector3(0, 0, -2)
collision_mask = 3

[node name="Left" type="Node3D" parent="head/Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.515761, -0.287867, -0.627192)

[node name="Right" type="Node3D" parent="head/Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.516, -0.288, -0.627)

[node name="hitbox_pos" type="Node3D" parent="head/Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.153035, -1.01779)

[node name="floor_ray" type="RayCast3D" parent="."]
target_position = Vector3(0, -2.5, 0)
